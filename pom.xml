<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>com.oregano</groupId>
   <artifactId>oreganoERP</artifactId>
   <version>0.0.1-SNAPSHOT</version>
   <packaging>war</packaging>

   <name>Orégano ERP</name>
   <description>Um ERP simples, destinado a pequenas e médias empresas, contendo, entre outras características, funções de CRM e mídias sociais.</description>

   <properties>
      <!-- Explicitly declaring the source encoding eliminates the following message: -->
      <!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered resources, i.e. build is platform dependent! -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <!-- Timestamp format for the maven.build.timestamp property -->
      <!-- You can reference property in pom.xml or filtered resources (must enable third-party plugin if using Maven < 2.1) -->
      <maven.build.timestamp.format>yyyyMMdd'T'HHmmss</maven.build.timestamp.format>
      <!-- Set the jboss.home property in an active profile of the $HOME/.m2/settings.xml to specify the JBoss AS directory the "Maven way" -->
      <!-- By default, we assign it to the value of the JBOSS_HOME envrionment variable -->
      <jboss.home>/opt/jboss-6.0.0.Final</jboss.home>
      <jboss.domain>default</jboss.domain>
      <arquillian.version>1.0.0.Alpha4</arquillian.version>
      <jboss-javaee6-spec.version>1.0.0.Final</jboss-javaee6-spec.version>
   </properties>

   <repositories>
      <!-- The JBoss Community public repository is a composite repository of several major repositories -->
      <!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
      <!-- At the time of writing, Arquillian and the JBoss Java EE specification POMs are only in the JBoss Community public repository (not Maven central) -->
      <repository>
         <id>jboss-public-repository</id>
         <name>JBoss Repository</name>
         <url>http://repository.jboss.org/nexus/content/groups/public</url>
         <!-- These optional flags are designed to speed up your builds by reducing remote server calls -->
         <releases>
            <updatePolicy>never</updatePolicy>
         </releases>
         <snapshots>
            <updatePolicy>daily</updatePolicy>
         </snapshots>
      </repository>
      <repository>
      <id>vaadin-snapshots</id>
      <url>http://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>vaadin-addons</id>
      <url>http://maven.vaadin.com/vaadin-addons</url>
    </repository>
   </repositories>

   <pluginRepositories>
      <pluginRepository>
         <id>jboss-public-repository</id>
         <name>JBoss Repository</name>
         <url>http://repository.jboss.org/nexus/content/groups/public</url>
         <!-- These optional flags are designed to speed up your builds by reducing remote server calls -->
         <releases>
            <updatePolicy>never</updatePolicy>
         </releases>
         <snapshots>
            <!-- Set to true to fix error in which Maven cannot find org.apache.maven.plugins:maven-archetype-plugin:maven-plugin:2.0-alpha-6-SNAPSHOT -->
            <updatePolicy>daily</updatePolicy>
         </snapshots>
      </pluginRepository>
   </pluginRepositories>

   <dependencies>
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-jpamodelgen</artifactId>
         <version>1.1.1.Final</version>
         <scope>provided</scope>
         <!-- Excluded because it's provided by the Java EE 6 dependencies -->
         <exclusions>
            <exclusion>
               <groupId>org.hibernate.javax.persistence</groupId>
               <artifactId>hibernate-jpa-2.0-api</artifactId>
            </exclusion>
         </exclusions>
      </dependency>

      <!-- Seam Solder provides convenient, portable CDI extensions such as an injectable logger -->
      <dependency>
         <groupId>org.jboss.seam.solder</groupId>
         <artifactId>seam-solder</artifactId>
         <version>3.0.0.Beta1</version>
      </dependency>

      <!-- Uncomment if deploying to JBoss AS (but not a requirement) -->
      <!--
      <dependency>
         <groupId>org.jboss.logging</groupId>
         <artifactId>jboss-logging</artifactId>
         <version>3.0.0.Beta4</version>
         <scope>provided</scope>
      </dependency>
      -->

      <!-- JSR-303 (Bean Validation) Implementation -->
      <!-- Provides portable constraints such as @Email -->
      <!-- Hibernate Validator is the only JSR-303 implementation at the moment, so we can assume it's provided -->
      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-validator</artifactId>
         <version>4.0.0.GA</version>
         <scope>provided</scope>
      </dependency>

      <!-- Needed for running tests (you may also use TestNG) -->
      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>4.8.1</version>
         <scope>test</scope>
      </dependency>

      <!-- Optional, but highly recommended -->
      <!-- Arquillian allows you to test enterprise code such as EJBs and Transactional(JTA) JPA from JUnit/TestNG -->
      <dependency>
         <groupId>org.jboss.arquillian</groupId>
         <artifactId>arquillian-junit</artifactId>
         <version>${arquillian.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
	      <groupId>com.vaadin</groupId>
	      <artifactId>vaadin</artifactId>
	      <version>6.5.2</version>
	    </dependency>
   </dependencies>

   <build>
      <finalName>${project.artifactId}</finalName>
      <plugins>
         <!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation processors -->
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.3.1</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
            </configuration>
         </plugin>
      </plugins>
   </build>

   <profiles>
      <profile>
         <!-- The default profile skips all tests, though you can tune it to run just unit tests based on a custom pattern -->
         <!-- Seperate profiles are provided for running all tests, including Arquillian tests that execute in the specified container -->
         <id>default</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <dependencies>
            <!-- Java EE 6 API dependency -->
            <!-- This one dependency imports all APIs available for a Java EE 6.0 application -->
            <dependency>
               <groupId>org.jboss.spec</groupId>
               <artifactId>jboss-javaee-6.0</artifactId>
               <version>${jboss-javaee6-spec.version}</version>
               <type>pom</type>
               <scope>provided</scope>
            </dependency>
         </dependencies>
         <build>
            <plugins>
               <plugin>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <version>2.4.3</version>
                  <configuration>
                     <skip>true</skip>
                  </configuration>
               </plugin>
               <!-- Optional JBoss deployer plugin will deploy your war to a local JBoss AS container if you've declared $JBOSS_HOME in your OS -->
               <!-- To use, set the JBOSS_HOME environment variable (or jboss.home in $HOME/.m2/settings.xml) and run 'mvn package jboss:hard-deploy' -->
               <plugin>
                  <groupId>org.codehaus.mojo</groupId>
                  <artifactId>jboss-maven-plugin</artifactId>
                  <version>1.4.1</version>
                  <configuration>
                     <jbossHome>${jboss.home}</jbossHome>
                     <serverName>${jboss.domain}</serverName>
                     <fileNames>
                        <!-- JNDI DataSource that connects to in-memory HSQLDB to demonstrate JPA -->
                        <fileName>src/main/resources-jbossas/default-ds.xml</fileName>
                        <!-- DataSource needs to go before the application -->
                        <fileName>${project.build.directory}/${project.build.finalName}.war</fileName>
                     </fileNames>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <!-- An optional Arquillian testing profile that executes tests in GlassFish Embedded -->
         <!-- Run with 'mvn clean test -Parq-glassfish-embedded' -->
         <id>arq-glassfish-embedded</id>
         <dependencies>
            <dependency>
               <groupId>org.jboss.arquillian.container</groupId>
               <artifactId>arquillian-glassfish-embedded-3</artifactId>
               <version>${arquillian.version}</version>
               <scope>test</scope>
            </dependency>
            <!-- This imports the Java EE 6 runtime libraries provided by GlassFish Embedded -->
            <dependency>
               <groupId>org.glassfish.extras</groupId>
               <artifactId>glassfish-embedded-all</artifactId>
               <version>3.0.1</version>
               <scope>provided</scope>
            </dependency>
         </dependencies>
         <build>
            <testResources>
               <testResource>
                  <directory>src/test/resources</directory>
               </testResource>
               <!-- Overrides default configuration to use alternate persistence.xml with eclipselink settings and declare a Glassfish Datasource -->
               <!-- Used by Arquillian -->
               <testResource>
                  <directory>src/test/resources-glassfish-embedded</directory>
               </testResource>
            </testResources>
            <plugins>
               <plugin>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <!-- don't use version 2.5 as it creates seperate test suites per class -->
                  <version>2.4.3</version>
                  <configuration>
                     <systemProperties>
                        <!-- This optional property fixes an annoyance with Glassfish that puts derby.log in the project root -->
                        <property>
                           <name>derby.stream.error.file</name>
                           <!-- If you save the log in target it is less likely to get committed in your project -->
                           <value>target/derby.log</value>
                        </property>
                     </systemProperties>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <profile>
         <!-- An optional Arquillian testing profile that executes tests in a remote JBoss AS instance -->
         <!-- Run with 'mvn clean test -Parq-jbossas-remote' -->
         <id>arq-jbossas-remote</id>
         <dependencies>
            <dependency>
               <groupId>org.jboss.arquillian.container</groupId>
               <artifactId>arquillian-jbossas-remote-6</artifactId>
               <version>${arquillian.version}</version>
               <scope>test</scope>
            </dependency>
            <!-- Java EE 6 API dependency -->
            <!-- This one dependency imports all APIs available for a Java EE 6.0 application -->
            <dependency>
               <groupId>org.jboss.spec</groupId>
               <artifactId>jboss-javaee-6.0</artifactId>
               <version>${jboss-javaee6-spec.version}</version>
               <type>pom</type>
               <scope>provided</scope>
            </dependency>
            <!-- needed for org.jnp.interfaces.NamingContextFactory -->
            <dependency>
               <groupId>org.jboss.jbossas</groupId>
               <artifactId>jboss-as-client</artifactId>
               <version>6.0.0.Final</version>
               <type>pom</type>
               <scope>test</scope>
            </dependency>
         </dependencies>
         <build>
            <testResources>
               <testResource>
                  <directory>src/test/resources</directory>
               </testResource>
               <!-- Overrides default configuration to use alternate persistence.xml with Hibernate settings and declare a JBoss AS Datasource -->
               <!-- Used by Arquillian -->
               <testResource>
                  <directory>src/test/resources-jbossas</directory>
               </testResource>
            </testResources>
         </build>
      </profile>
   </profiles>
</project>
